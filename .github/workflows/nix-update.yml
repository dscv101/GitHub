---
name: Update Nix Packages

on:
  schedule:
    - cron: '0 6 * * 1,4'  # Monday and Thursday at 6 AM UTC
  workflow_dispatch:
    inputs:
      packages:
        description: 'Specific packages to update (comma-separated)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  update-packages:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@v3

      - name: Setup Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v13

      - name: Install nix-update
        run: |
          nix profile install nixpkgs#nix-update
          nix profile install nixpkgs#nvd  # For diff reports

      - name: Update packages
        id: update
        run: |
          # Define packages to update
          PACKAGES="${{ github.event.inputs.packages }}"
          if [ -z "$PACKAGES" ]; then
            # Default packages that commonly need updates
            PACKAGES="firefox,chromium,vscode,discord,slack"
          fi
          
          echo "packages=$PACKAGES" >> "$GITHUB_OUTPUT"
          
          # Track changes
          git config --global user.name "nix-update-bot"
          git config --global user.email "nix-update@github-actions.local"
          
          updated_packages=""
          
          # Update each package
          IFS=',' read -ra PACKAGE_ARRAY <<< "$PACKAGES"
          for package in "${PACKAGE_ARRAY[@]}"; do
            echo "Updating $package..."
            if nix-update --flake "$package" --commit; then
              updated_packages="$updated_packages $package"
              echo "✅ Updated $package"
            else
              echo "⚠️ Failed to update $package"
            fi
          done
          
          echo "updated_packages=$updated_packages" >> "$GITHUB_OUTPUT"

      - name: Generate update report
        if: steps.update.outputs.updated_packages != ''
        run: |
          cat > update-report.md << 'EOF'
          # Nix Package Update Report
          
          ## Updated Packages
          ${{ steps.update.outputs.updated_packages }}
          
          ## Changes Summary
          ```
          $(git log --oneline --since="1 hour ago")
          ```
          
          ## Testing Required
          - [ ] Build test passes
          - [ ] System configuration validates
          - [ ] Manual testing completed
          
          *This update was automatically generated by nix-update*
          EOF

      - name: Create pull request
        if: steps.update.outputs.updated_packages != ''
        uses: peter-evans/create-pull-request@v7
        with:
          title: "chore: update Nix packages (${{ steps.update.outputs.packages }})"
          body-path: update-report.md
          branch: automated-nix-updates-${{ github.run_number }}
          labels: |
            dependencies
            automated
            nix-update
          delete-branch: true
